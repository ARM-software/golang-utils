// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/ARM-software/golang-utils/utils/resource (interfaces: ICloseableResource)
//
// Generated by this command:
//
//	mockgen -destination=../mocks/mock_resource.go -package=mocks github.com/ARM-software/golang-utils/utils/resource ICloseableResource
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockICloseableResource is a mock of ICloseableResource interface.
type MockICloseableResource struct {
	ctrl     *gomock.Controller
	recorder *MockICloseableResourceMockRecorder
	isgomock struct{}
}

// MockICloseableResourceMockRecorder is the mock recorder for MockICloseableResource.
type MockICloseableResourceMockRecorder struct {
	mock *MockICloseableResource
}

// NewMockICloseableResource creates a new mock instance.
func NewMockICloseableResource(ctrl *gomock.Controller) *MockICloseableResource {
	mock := &MockICloseableResource{ctrl: ctrl}
	mock.recorder = &MockICloseableResourceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockICloseableResource) EXPECT() *MockICloseableResourceMockRecorder {
	return m.recorder
}

// Close mocks base method.
func (m *MockICloseableResource) Close() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Close")
	ret0, _ := ret[0].(error)
	return ret0
}

// Close indicates an expected call of Close.
func (mr *MockICloseableResourceMockRecorder) Close() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Close", reflect.TypeOf((*MockICloseableResource)(nil).Close))
}

// IsClosed mocks base method.
func (m *MockICloseableResource) IsClosed() bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsClosed")
	ret0, _ := ret[0].(bool)
	return ret0
}

// IsClosed indicates an expected call of IsClosed.
func (mr *MockICloseableResourceMockRecorder) IsClosed() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsClosed", reflect.TypeOf((*MockICloseableResource)(nil).IsClosed))
}

// String mocks base method.
func (m *MockICloseableResource) String() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "String")
	ret0, _ := ret[0].(string)
	return ret0
}

// String indicates an expected call of String.
func (mr *MockICloseableResourceMockRecorder) String() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "String", reflect.TypeOf((*MockICloseableResource)(nil).String))
}
